basePath: /
host: localhost:8080
info:
  contact: {}
  description: This is a sample API.
  title: My Go API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates user and returns access and refresh tokens
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      description: Logs out the user by invalidating the refresh token
      parameters:
      - description: Refresh token
        in: body
        name: token
        required: true
        schema:
          properties:
            refresh_token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout user
      tags:
      - auth
  /me:
    get:
      description: Returns user info and organizations for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get current user info
      tags:
      - auth
  /orgs/switch:
    post:
      consumes:
      - application/json
      description: Switches the current organization for the user and returns a new
        access token
      parameters:
      - description: Organization ID
        in: body
        name: org
        required: true
        schema:
          properties:
            org_id:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Switch organization
      tags:
      - auth
  /refresh:
    post:
      consumes:
      - application/json
      description: Generates new access and refresh tokens using a valid refresh token
      parameters:
      - description: Refresh token
        in: body
        name: token
        required: true
        schema:
          properties:
            refresh_token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh tokens
      tags:
      - auth
schemes:
- http
swagger: "2.0"
